version: "3.8"
services:
  infisical_server:
    container_name: bigpods_infisical_server
    restart: unless-stopped
    depends_on:
      infisical_redis_server:
        condition: service_started
      infisical_postgres_server:
        condition: service_healthy
    image: infisical/infisical:latest-postgres
    pull_policy: always
    env_file: .env.infisical
    # command: npm run migration:latest
    ports:
      - 8080:8080
    environment:
      - NODE_ENV=production
    networks:
      - infisical_server_network

  infisical_redis_server:
    image: redis
    container_name: bigpods_infisical_redis_server
    env_file: .env.infisical
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    # ports:
    #   - 6379:6379
    networks:
      - infisical_server_network
    volumes:
      - infisical_redis_server_data_volume:/data
  
  infisical_postgres_server:
    container_name: bigpods_infisical_postgres_server
    image: postgres:14-alpine
    restart: always
    env_file: .env.infisical
    # ports: 
    #   - 5432:5432
    volumes:
      - infisical_postgres_server_data_volume:/var/lib/postgresql/data
    networks:
      - infisical_server_network
    healthcheck:
      test: "pg_isready --username=${POSTGRES_USER} && psql --username=${POSTGRES_USER} --list"
      interval: 5s
      timeout: 10s
      retries: 10

volumes:
  infisical_postgres_server_data_volume:
    driver: local
    name: bigpods_infisical_postgres_server_data_volume
  infisical_redis_server_data_volume:
    driver: local
    name: bigpods_infisical_redis_server_data_volume

networks:
  infisical_server_network:
    driver: bridge
    name: bigpods_infisical_server_network
