// <auto-generated />
using System;
using Bigpods.Monolith.Modules.Shared.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bigpods.Monolith.Migrations
{
    [DbContext(typeof(DatabaseService))]
    partial class DatabaseServiceModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.AttributeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<Guid>("AttributeTypeId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime>("CreatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedAtTimezone")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime?>("DeletedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("MeasuringUnit")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeTypeId");

                    b.HasIndex("Value", "MeasuringUnit", "AttributeTypeId");

                    b.ToTable("attributes", (string)null);
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.AttributeTypeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime>("CreatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedAtTimezone")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime?>("DeletedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("MeasuringUnitPattern")
                        .IsRequired()
                        .HasColumnType("text(65535)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<string>("ValuePattern")
                        .IsRequired()
                        .HasColumnType("text(65535)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("attribute_types", (string)null);
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.InventoryInputModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime>("CreatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedAtTimezone")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime?>("DeletedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<int>("Stock")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("UpdatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<Guid>("VariantId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("ProductId");

                    b.HasIndex("VariantId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("inventory_inputs", (string)null);
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.InventoryModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime>("CreatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedAtTimezone")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime?>("DeletedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<int>("Stock")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("UpdatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<Guid>("VariantId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId");

                    b.HasIndex("VariantId", "WarehouseId");

                    b.ToTable("inventories", (string)null);
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.InventoryOutputModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime>("CreatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedAtTimezone")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime?>("DeletedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<int>("Stock")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("UpdatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<Guid>("VariantId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.HasIndex("ProductId");

                    b.HasIndex("VariantId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("inventory_outputs", (string)null);
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.MediaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<DateTime>("CreatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedAtTimezone")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime?>("DeletedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasMaxLength(63)
                        .HasColumnType("varchar(63)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Position")
                        .HasColumnType("int(2)");

                    b.Property<DateTime?>("UpdatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ContentType");

                    b.HasIndex("Extension");

                    b.HasIndex("Path");

                    b.ToTable("medias", (string)null);
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.ProductModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("CreatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedAtTimezone")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime?>("DeletedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<bool>("IsCompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPublished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Stock")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("UpdatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("Brand");

                    b.HasIndex("Model");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.VariantModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("CreatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedAtTimezone")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime?>("DeletedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<int>("Stock")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("UpdatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("Sku");

                    b.ToTable("variants", (string)null);
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.VariantOnAttributeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<Guid>("AttributeId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime>("CreatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedAtTimezone")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime?>("DeletedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("UpdatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<Guid>("VariantId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("VariantId", "AttributeId");

                    b.ToTable("variants_on_attributes", (string)null);
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.VariantOnMediaModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime>("CreatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedAtTimezone")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime?>("DeletedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<Guid>("MediaId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime?>("UpdatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<Guid>("VariantId")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.HasKey("Id");

                    b.HasIndex("MediaId");

                    b.HasIndex("VariantId", "MediaId");

                    b.ToTable("variants_on_medias", (string)null);
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.WarehouseModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime>("CreatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedAtTimezone")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<DateTime?>("DeletedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeletedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAtDatetime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedAtTimezone")
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("char(36)")
                        .UseCollation("utf8mb4_general_ci");

                    b.HasKey("Id");

                    b.ToTable("warehouses", (string)null);
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.AttributeModel", b =>
                {
                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.AttributeTypeModel", "AttributeType")
                        .WithMany("Attributes")
                        .HasForeignKey("AttributeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AttributeType");
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.InventoryInputModel", b =>
                {
                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.InventoryModel", "Inventory")
                        .WithMany("InventoryInputs")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.VariantModel", "Variant")
                        .WithMany()
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.WarehouseModel", "Warehouse")
                        .WithMany("InventoryInputs")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Product");

                    b.Navigation("Variant");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.InventoryModel", b =>
                {
                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.VariantModel", "Variant")
                        .WithMany()
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.WarehouseModel", "Warehouse")
                        .WithMany("Inventories")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Variant");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.InventoryOutputModel", b =>
                {
                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.InventoryModel", "Inventory")
                        .WithMany("InventoryOutputs")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.VariantModel", "Variant")
                        .WithMany()
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.WarehouseModel", "Warehouse")
                        .WithMany("InventoryOutputs")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Product");

                    b.Navigation("Variant");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.VariantModel", b =>
                {
                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.ProductModel", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.VariantOnAttributeModel", b =>
                {
                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.AttributeModel", "Attribute")
                        .WithMany("VariantsOnAttributes")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.VariantModel", "Variant")
                        .WithMany("VariantsOnAttributes")
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.VariantOnMediaModel", b =>
                {
                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.MediaModel", "Media")
                        .WithMany("VariantsOnMedias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.VariantModel", "Variant")
                        .WithMany("VariantsOnMedias")
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Media");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.AttributeModel", b =>
                {
                    b.Navigation("VariantsOnAttributes");
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.AttributeTypeModel", b =>
                {
                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.InventoryModel", b =>
                {
                    b.Navigation("InventoryInputs");

                    b.Navigation("InventoryOutputs");
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.MediaModel", b =>
                {
                    b.Navigation("VariantsOnMedias");
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.ProductModel", b =>
                {
                    b.Navigation("Variants");
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.VariantModel", b =>
                {
                    b.Navigation("VariantsOnAttributes");

                    b.Navigation("VariantsOnMedias");
                });

            modelBuilder.Entity("Bigpods.Monolith.Modules.Shared.Infrastructure.Models.WarehouseModel", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("InventoryInputs");

                    b.Navigation("InventoryOutputs");
                });
#pragma warning restore 612, 618
        }
    }
}
